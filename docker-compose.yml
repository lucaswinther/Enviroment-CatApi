version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
            testing_net:
                ipv4_address: 172.28.1.2    

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.8.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
            testing_net:
                ipv4_address: 172.28.1.3

  apmserver:
    container_name: apmserver
    image: docker.elastic.co/apm/apm-server:7.8.0
    command: --strict.perms=false
    ports:
      - 8200:8200
      - 8201:8200
    environment:
      - apm-server.host=0.0.0.0
      - setup.kibana.host=kibana:5601
      - output.elasticsearch.hosts=["elasticsearch:9200"]
    depends_on:
      - elasticsearch
      - kibana
    networks:
            testing_net:
                ipv4_address: 172.28.1.4

  metricbeat:
    container_name: metricbeat
    image: metricbeat
    restart: always
    build:
      context: .
      dockerfile: monitoring/dockerfile
    user: root
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - metricbeat:/usr/share/metricbeat/data
    environment:
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - KIBANA_HOST=kibana:5601
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    networks:
            testing_net:
                ipv4_address: 172.28.1.5
    depends_on:
      - database
      - elasticsearch
      - kibana      
      - apmserver

  database:
    container_name: sqlserver
    image: sqlserver
    build:
      context: .
      dockerfile: database/dockerfile
    ports:
        - "1433:1433"
    volumes:
        - mssqldata:/var/opt/mssql
    networks:
            testing_net:
                ipv4_address: 172.28.1.6

  api:
    container_name: catwebapi
    image: catwebapi
    build:
      context: .
      dockerfile: api/dockerfile
    ports:
        - "80:80"      
    networks:
            testing_net:
                ipv4_address: 172.28.1.7
    depends_on:
      - database
      - elasticsearch
      - kibana      
      - apmserver

networks:
    testing_net:
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/16
        
volumes:
  elasticsearch-data:
    driver: local
  mssqldata:
    driver: local
  metricbeat: